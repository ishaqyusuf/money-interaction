// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id               Int                     @unique @default(autoincrement())
  name             String
  username         String
  deletedAt        DateTime?
  createdAt        DateTime                @default(now())
  updatedAt        DateTime                @updatedAt
  interactionBooks InteractionBooks[]
  bookAccessList   InteractionBookAccess[]
}

model InteractionBooks {
  id             Int                       @unique @default(autoincrement())
  userId         Int
  name           String // fish-pond, ishaq's pond 3 
  slug           String                    @unique
  deletedAt      DateTime?
  createdAt      DateTime                  @default(now())
  updatedAt      DateTime                  @updatedAt
  analytics      InteractionAnalytics[]
  interactions   Interactions[]
  forms          InteractionBookForms[]
  user           Users                     @relation(fields: [userId], references: [id])
  categories     InteractionBookCategory[]
  bookAccessList InteractionBookAccess[]

  @@index([createdAt, deletedAt, userId, slug])
}

model InteractionBookAccess {
  id          Int                         @unique @default(autoincrement())
  bookId      Int
  userId      Int
  createForm  Boolean?                    @default(false)
  deletedAt   DateTime?
  createdAt   DateTime                    @default(now())
  updatedAt   DateTime                    @updatedAt
  book        InteractionBooks            @relation(fields: [bookId], references: [id])
  user        Users                       @relation(fields: [userId], references: [id])
  permissions InteractionFormPermission[]

  @@index([createdAt, deletedAt, userId, bookId])
}

model InteractionFormPermission {
  id                Int                   @unique @default(autoincrement())
  bookAccessId      Int
  bookFormId        Int
  deletedAt         DateTime?
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  createInteraction Boolean?              @default(false)
  editForm          Boolean?              @default(false)
  deleteForm        Boolean?              @default(false)
  bookAccess        InteractionBookAccess @relation(fields: [bookAccessId], references: [id])
  bookForm          InteractionBookForms  @relation(fields: [bookFormId], references: [id])
}

model InteractionBookCategory {
  id             Int               @unique @default(autoincrement())
  bookCategoryId Int
  bookId         Int
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  deletedAt      DateTime?
  bookCategory   BookCategory      @relation(fields: [bookCategoryId], references: [id])
  book           InteractionBooks? @relation(fields: [bookId], references: [id])
}

model BookCategory {
  id             Int                       @unique @default(autoincrement())
  title          String                    @unique
  createdAt      DateTime                  @default(now())
  updatedAt      DateTime                  @updatedAt
  deletedAt      DateTime?
  bookCategories InteractionBookCategory[]
}

model InteractionBookForms {
  id              Int                         @unique @default(autoincrement())
  formSchemaId    Int
  bookId          Int
  deletedAt       DateTime?
  createdAt       DateTime                    @default(now())
  updatedAt       DateTime                    @updatedAt
  interactionBook InteractionBooks            @relation(fields: [bookId], references: [id])
  formSchema      InteractionFormSchemas      @relation(fields: [formSchemaId], references: [id])
  interactions    Interactions[]
  permissions     InteractionFormPermission[]

  @@index([bookId])
}

model SchemaRelations {
  id        Int       @unique @default(autoincrement())
  schemaId  Int
  relatedId Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model InteractionFormSchemas {
  id             Int                                   @unique @default(autoincrement())
  title          String // feed booking, petrol, feeds collected, worker's salary
  description    String?                               @db.LongText
  valueFormat    String?
  meta           Json                                  @db.Json
  publishedAt    DateTime?                             @db.Timestamp(0)
  createdAt      DateTime                              @default(now())
  updatedAt      DateTime                              @updatedAt
  deletedAt      DateTime?
  bookForms      InteractionBookForms[]
  formFields     InteractionFormFields[]
  formCategories InteractionFormCategory[]
  displayLayouts InteractionFormSchemaDisplayLayouts[]
}

model InteractionFormSchemaDisplayLayouts {
  id           Int                    @unique @default(autoincrement())
  formSchemaId Int
  text         String?
  span         Int                    @default(12)
  align        String                 @default("left")
  layoutIndex  Int                    @default(0)
  createdAt    DateTime               @default(now())
  updatedAt    DateTime               @updatedAt
  deletedAt    DateTime?
  formSchema   InteractionFormSchemas @relation(fields: [formSchemaId], references: [id])
}

model InteractionFormCategory {
  id             Int                    @unique @default(autoincrement())
  formSchemaId   Int
  formCategoryId Int
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt
  deletedAt      DateTime?
  category       FormCategory?          @relation(fields: [formCategoryId], references: [id])
  formSchema     InteractionFormSchemas @relation(fields: [formSchemaId], references: [id])
}

model FormCategory {
  id             Int                       @unique @default(autoincrement())
  title          String
  createdAt      DateTime                  @default(now())
  updatedAt      DateTime                  @updatedAt
  deletedAt      DateTime?
  formCategories InteractionFormCategory[]
}

model InteractionFormFields {
  id                      Int                    @unique @default(autoincrement())
  label                   String // name, amount, feeds,
  dataType                String //string, text, number, auto-complete
  format                  String?
  unit                    String? // LB, KG, USD etc
  span                    Int?                   @default(12)
  defaultValue            String?
  currency                Boolean?               @default(false)
  autoCompleteFromFieldId Int?
  primaryField            Boolean                @default(false)
  required                Boolean                @default(false)
  meta                    Json                   @db.Json
  deletedAt               DateTime?
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
  formSchema              InteractionFormSchemas @relation(fields: [formSchemaId], references: [id])
  formSchemaId            Int
  values                  InteractionFormValue[]
  analytics               InteractionAnalytics[]
}

model InteractionAnalytics {
  id        Int                    @unique @default(autoincrement())
  title     String
  value     Float
  bookId    Int
  fieldId   Int
  deletedAt DateTime?
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
  book      InteractionBooks       @relation(fields: [bookId], references: [id])
  formField InteractionFormFields? @relation(fields: [fieldId], references: [id])
}

model InteractionFormValue {
  id             Int                   @unique @default(autoincrement())
  value          String // fish-pond interaction 
  meta           Json                  @db.Json
  interactionsId Int
  fieldId        Int
  deletedAt      DateTime?
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt
  interaction    Interactions          @relation(fields: [interactionsId], references: [id])
  field          InteractionFormFields @relation(fields: [fieldId], references: [id])
}

model Interactions {
  id                    Int                    @unique @default(autoincrement())
  bookId                Int
  bookFormId            Int
  bookFormInteractionId Int
  bookInteractionId     Int
  details               String // fish-pond interaction 
  deletedAt             DateTime?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  book                  InteractionBooks       @relation(fields: [bookId], references: [id])
  bookForm              InteractionBookForms   @relation(fields: [bookFormId], references: [id])
  fieldValues           InteractionFormValue[]

  @@index([bookId])
}
